//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication2.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ReportServerEntities : DbContext
    {
        public ReportServerEntities()
            : base("name=ReportServerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Role> Roles { get; set; }
    
        public virtual int CreateRole(Nullable<System.Guid> roleID, string roleName, string description, string taskMask, Nullable<byte> roleFlags)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(System.Guid));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var taskMaskParameter = taskMask != null ?
                new ObjectParameter("TaskMask", taskMask) :
                new ObjectParameter("TaskMask", typeof(string));
    
            var roleFlagsParameter = roleFlags.HasValue ?
                new ObjectParameter("RoleFlags", roleFlags) :
                new ObjectParameter("RoleFlags", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateRole", roleIDParameter, roleNameParameter, descriptionParameter, taskMaskParameter, roleFlagsParameter);
        }
    
        public virtual int DeleteRole(string roleName)
        {
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRole", roleNameParameter);
        }
    }
}
